import tkinter as tk
from tkinter import messagebox
import random

BOARD_SIZE = 5
EMPTY = ' '
PLAYER_X = 'X'
PLAYER_O = 'O'

class TicTacToe:
    def __init__(self, master):
        self.master = master
        self.master.title("Tic-Tac-Toe 5x5 - Tech Style")
        self.master.configure(bg="#121212")

        self.board = [[EMPTY] * BOARD_SIZE for _ in range(BOARD_SIZE)]
        self.current_player = PLAYER_X
        self.game_over = False
        self.is_bot = True
        self.bot_difficulty = "hard"

        self.buttons = [[None for _ in range(BOARD_SIZE)] for _ in range(BOARD_SIZE)]
        self.create_widgets()

    def create_widgets(self):
        frame_board = tk.Frame(self.master, bg="#121212")
        frame_board.grid(row=0, column=0, columnspan=BOARD_SIZE, pady=20)

        for i in range(BOARD_SIZE):
            for j in range(BOARD_SIZE):
                self.buttons[i][j] = tk.Button(
                    frame_board, text="", width=6, height=2,
                    font=("Arial", 20, "bold"), bg="#1e1e1e", fg="#00ffcc",
                    relief="flat", borderwidth=2,
                    highlightbackground="#00ffcc",
                    command=lambda i=i, j=j: self.make_move(i, j)
                )
                self.buttons[i][j].grid(row=i, column=j, padx=5, pady=5)

        frame_controls = tk.Frame(self.master, bg="#121212")
        frame_controls.grid(row=1, column=0, columnspan=BOARD_SIZE, pady=10)

        self.mode_button = tk.Button(
            frame_controls, text="Chơi với Bot", width=15, height=2,
            bg="#0077cc", fg="white", font=("Arial", 12, "bold"),
            command=self.toggle_mode
        )
        self.mode_button.grid(row=0, column=0, padx=5, pady=5)

        self.easy_button = tk.Button(
            frame_controls, text="Chế độ Dễ", width=15, height=2,
            bg="#005f99", fg="white", font=("Arial", 12, "bold"),
            command=self.set_easy_mode
        )
        self.easy_button.grid(row=0, column=1, padx=5, pady=5)

        self.hard_button = tk.Button(
            frame_controls, text="Chế độ Khó", width=15, height=2,
            bg="#990000", fg="white", font=("Arial", 12, "bold"),
            command=self.set_hard_mode
        )
        self.hard_button.grid(row=0, column=2, padx=5, pady=5)

        self.reset_button = tk.Button(
            frame_controls, text="Chơi lại", width=15, height=2,
            bg="#009900", fg="white", font=("Arial", 12, "bold"),
            command=self.reset_game
        )
        self.reset_button.grid(row=0, column=3, padx=5, pady=5)

    def toggle_mode(self):
        self.is_bot = not self.is_bot
        mode_text = "Chơi với Bot" if self.is_bot else "Chơi 2 Người"
        self.mode_button.config(text=mode_text)

    def set_easy_mode(self):
        self.bot_difficulty = "easy"
        messagebox.showinfo("Chế độ chơi", "Chế độ Dễ đã được chọn!")

    def set_hard_mode(self):
        self.bot_difficulty = "hard"
        messagebox.showinfo("Chế độ chơi", "Chế độ Khó đã được chọn!")

    def make_move(self, i, j):
        if self.board[i][j] != EMPTY or self.game_over:
            return

        self.board[i][j] = self.current_player
        self.update_buttons()

        if self.check_win(self.current_player):
            self.game_over = True
            messagebox.showinfo("Kết thúc", f"{self.current_player} thắng!")
            return

        if self.check_draw():
            self.game_over = True
            messagebox.showinfo("Kết thúc", "Hòa!")
            return

        self.current_player = PLAYER_O if self.current_player == PLAYER_X else PLAYER_X

        if self.is_bot and self.current_player == PLAYER_O:
            self.master.after(500, self.bot_move)

    def bot_move(self):
        if self.game_over:
            return
        
        i, j = self.find_best_move()
        self.make_move(i, j)

    def check_win(self, player):
        for i in range(BOARD_SIZE):
            if all(self.board[i][j] == player for j in range(BOARD_SIZE)):
                return True
        for j in range(BOARD_SIZE):
            if all(self.board[i][j] == player for i in range(BOARD_SIZE)):
                return True
        if all(self.board[i][i] == player for i in range(BOARD_SIZE)):
            return True
        if all(self.board[i][BOARD_SIZE - 1 - i] == player for i in range(BOARD_SIZE)):
            return True
        return False

    def check_draw(self):
        return all(self.board[i][j] != EMPTY for i in range(BOARD_SIZE) for j in range(BOARD_SIZE))

    def reset_game(self):
        self.board = [[EMPTY] * BOARD_SIZE for _ in range(BOARD_SIZE)]
        self.current_player = PLAYER_X
        self.game_over = False
        self.update_buttons()

    def update_buttons(self):
        for i in range(BOARD_SIZE):
            for j in range(BOARD_SIZE):
                self.buttons[i][j].config(text=self.board[i][j] if self.board[i][j] != EMPTY else "", bg="#1e1e1e")

    def find_best_move(self):
        empty_cells = [(i, j) for i in range(BOARD_SIZE) for j in range(BOARD_SIZE) if self.board[i][j] == EMPTY]
        return random.choice(empty_cells) if empty_cells else (-1, -1)

if __name__ == "__main__":
    root = tk.Tk()
    game = TicTacToe(root)
    root.mainloop()
